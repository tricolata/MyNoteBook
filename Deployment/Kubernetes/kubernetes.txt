As numbers of containers grow in size, one can not just use command line to keep track. Kubernetes solves this problem. 

Kubernetes
	- Open-source container orchestration engine for automating deployment, scaling, and managing containerized app.

Kubernetes Components
	- Control Plane Components - makes global decision about clusters. Also detect & response to cluster events.
		- kube-apiserver - front-end of control plane. exposes kubernetes api.
		- etcd - key/value store for kube's backing store for cluster data.
		- kube-scheduler - watches out for pod w/ no node and assign them node.
		- kube-controller-manager - runs controller processes.
		- cloud-controller-manager - embeds cloud specific control logic.
	- Node Components
		- kubelet - agent that runs on each node to make containers are running in a pod.
		- kube-proxy - network proxy that runs on each node implementing part of kube Service concept.
		- container-runtime - responsible for running containers.

	* Kubernetes runs your workload by placing containers into Pods to run on Nodes. 
	A node may be a virtual or physical machine, depending on the cluster. 
	Each node is managed by the control plane and contains the services necessary to run Pods.


- Approaches to instructing kubernetes
	- Imperative - Command Line
	- Declarative - Config File
	
- Storage
	- 1. Persistent Volume Claim
	- 2. Persistent Volume
	- 3. Storage Class

- Commands
	- kubectl version
	- kubectl apply -f platforms-depl.yaml
	- kubectl get deployments
	- kubectl get pods
	- kubectl get services
	- if you delete a deployment, kube will replace it.
	- to permanently delete pod
		- kubectl delete deployment platforms-depl
	- permanently delete service
		- kubectl delete svc <serviceName>
	- force it to pull down latest docker
		- kubectl rollout restart deployment <depl-file>
	- list namespaces
		- kubectl get namespace
		- kubectl get pods --namespace=<namespace name>
	- list storages
		- kubectl get storageclass
		- kubectl get pvc
	- user (secrets)
		- kubectl create secret generic mariadb1 --from-literal=KEY="VALUE"
	

Reference

Deploying DB in Kubernetes
	- https://kubernetes.io/docs/tasks/run-application/run-single-instance-stateful-application/
Credential secrets in db
	- https://kubernetes.io/docs/concepts/configuration/secret/
	- https://cloud.netapp.com/blog/kubernetes-shared-storage-the-basics-and-a-quick-tutorial
Issus
	- Cant connect to two servers running locally with same port
		- https://dev.mysql.com/doc/refman/8.0/en/can-not-connect-to-server.html
		- https://stackoverflow.com/questions/16325607/cant-connect-to-local-mysql-server-through-socket-tmp-mysql-sock
https://goteleport.com/blog/microservices-containers-kubernetes/
